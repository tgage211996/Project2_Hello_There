{"version":3,"sources":["./src/app/controllers/postController/post.service.ts","./src/app/views/post/post.component.ts","./src/app/views/post/post.component.html","./src/app/views/write-a-post/write-a-post.component.ts","./src/app/views/write-a-post/write-a-post.component.html","./src/app/views/comment-feed/comment-feed.component.ts","./src/app/views/comment-feed/comment-feed.component.html","./src/environments/environment.ts","./src/app/controllers/likeController/like.service.ts","./src/app/views/navbar/navbar.component.ts","./src/app/views/navbar/navbar.component.html","./src/app/views/signup/signup.component.ts","./src/app/views/signup/signup.component.html","./src/app/controllers/friendController/friend.service.ts","./src/app/views/comment/comment.component.ts","./src/app/views/comment/comment.component.html","./src/app/views/write-a-comment/write-a-comment.component.ts","./src/app/views/write-a-comment/write-a-comment.component.html","./src/app/views/login/login.component.ts","./src/app/views/login/login.component.html","./src/app/views/profile-information/profile-information.component.ts","./src/app/views/profile-information/profile-information.component.html","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/views/home-feed/home-feed.component.ts","./src/app/views/home-feed/home-feed.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/views/friends-sidebar/friends-sidebar.component.ts","./src/app/views/friends-sidebar/friends-sidebar.component.html","./src/app/controllers/userController/user.service.ts","./src/app/app.module.ts","./src/app/views/view-post/view-post.component.ts","./src/app/views/view-post/view-post.component.html","./src/app/controllers/commentController/comment.service.ts","./src/app/views/profile-feed/profile-feed.component.ts","./src/app/views/profile-feed/profile-feed.component.html","./src/app/views/post-signature/post-signature.component.ts","./src/app/views/post-signature/post-signature.component.html","./src/app/views/friend/friend.component.ts","./src/app/views/friend/friend.component.html","./src/app/views/friends-list/friends-list.component.ts","./src/app/views/friends-list/friends-list.component.html","./src/app/app-routing.module.ts","./src/app/views/profile/profile.component.ts","./src/app/views/profile/profile.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\nimport { Post } from 'src/app/models/post';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostService {\r\n\r\n  // Base URL\r\n  baseUrl = \"/api/post\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n\r\n  // Write post (POST)\r\n  writePost(content: string, author: User) {\r\n    \r\n    const post = {\r\n      content: content,\r\n      author: author\r\n    }\r\n\r\n    return this.http.post<Post>(this.baseUrl + '/create', post, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n\r\n  }\r\n\r\n\r\n  // Get all posts (GET)\r\n  getPosts(): Observable<Post[]> {\r\n\r\n    return this.http.get<Post[]>(this.baseUrl + '/all')\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }\r\n\r\n\r\n  // Get user posts (GET)\r\n  getUserPosts(user: User): Observable<Post[]> {\r\n\r\n    return this.http.get<Post[]>(this.baseUrl + `/userPosts?username=${user.username}`)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }\r\n\r\n  \r\n  // Error handling\r\n  errorHandler(error: any) {\r\n    let errorMessage = '';\r\n    if(error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CommentService } from 'src/app/controllers/commentController/comment.service';\r\nimport { LikeService } from 'src/app/controllers/likeController/like.service';\r\nimport { Post } from 'src/app/models/post';\r\nimport { User } from 'src/app/models/user';\r\nimport { Comment } from 'src/app/models/comment';\r\nimport { Like } from 'src/app/models/like';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit {\r\n\r\n  @Input() post: Post | undefined;\r\n  image = \"assets/images/profilePicture.png\";\r\n  writeComment: boolean = false;\r\n  showComments: boolean = false;\r\n  comments: Comment[] | undefined;\r\n  likes: Like[] | undefined;\r\n  liked: boolean = false;\r\n  user: User | undefined;\r\n  likeCount: number = 0;\r\n\r\n  constructor(private likeService: LikeService, private commentService: CommentService) { }\r\n\r\n  ngOnInit(): void {\r\n    let userString = sessionStorage.getItem('user');\r\n    if (userString) {\r\n      this.user = JSON.parse(userString);\r\n    }\r\n\r\n    if (this.post) {\r\n      this.likeService.getLikes(this.post).subscribe(data => {\r\n        this.likes = data;\r\n        this.likeCount = this.likes.length;\r\n        \r\n        this.likes.forEach((like) => {\r\n          if (like.user.id == this.user?.id) {\r\n            this.liked = true;\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  likePost() {\r\n    if (this.user && this.post) {\r\n      this.likeService.likePost(this.user, this.post).subscribe();\r\n      this.liked = true;\r\n      this.likeCount += 1;\r\n    }\r\n  }\r\n  \r\n  unlikePost() {\r\n    if (this.user && this.post) {\r\n      this.likeService.unlikePost(this.user, this.post).subscribe();\r\n      this.liked = false;\r\n      this.likeCount -= 1;\r\n    }\r\n  }\r\n  \r\n  toggleWriteComment() {\r\n    this.writeComment = !this.writeComment;\r\n  }\r\n\r\n  toggleComments() {\r\n    this.showComments = !this.showComments;\r\n    if (!this.comments && this.post) {\r\n      this.commentService.getComments(this.post).subscribe(data => {\r\n        this.comments = data;\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"post\">\r\n    <div class=\"container-fluid well post\" style=\"margin-bottom: 0; margin-top: 10px;\">\r\n        <div class=\"media-left\">\r\n            <img [src]=\"image\" class=\"media-object\" style=\"width:70px\">\r\n        </div>\r\n        <div class=\"media-body\">\r\n            <h4><strong>{{ post.author.displayName | uppercase }}</strong></h4>\r\n            <p class=\"well well-sm post-content\">{{ post.content }}</p>\r\n            <!-- Display likes -->\r\n            <div style=\"margin-top: 10px; margin-right: 10px;\">Likes: {{ likeCount }}</div>\r\n\r\n            <!-- Like button -->\r\n            <span *ngIf=\"liked\">\r\n                <button (click)=\"unlikePost()\" class=\"btn btn-danger\" style=\"margin-top: 10px; margin-right: 10px;\">Unlike</button>\r\n            </span>\r\n\r\n            <span *ngIf=\"!liked\">\r\n                <button (click)=\"likePost()\" class=\"btn btn-primary\" style=\"margin-top: 10px; margin-right: 10px;\">Like</button>\r\n            </span>\r\n\r\n            <!-- Toggle comments button -->\r\n            <button class=\"btn\" style=\"margin-top: 10px; margin-right: 10px;\" (click)=\"toggleComments()\">\r\n                <span *ngIf=\"!showComments\">\r\n                    Show comments\r\n                </span>\r\n                <span *ngIf=\"showComments\">\r\n                    Hide comments\r\n                </span>\r\n            </button>\r\n\r\n            <!-- Toggle comments button -->\r\n            <button class=\"btn\" style=\"margin-top: 10px; margin-right: 10px;\" (click)=\"toggleWriteComment()\">\r\n                <span *ngIf=\"!writeComment\">\r\n                    Add a comment\r\n                </span>\r\n                <span *ngIf=\"writeComment\">\r\n                    Cancel\r\n                </span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"showComments\">\r\n        <app-comment-feed [comments]=\"comments\"></app-comment-feed>\r\n    </div>\r\n    <div *ngIf=\"writeComment\">\r\n        <app-write-a-comment [post]=\"post\"></app-write-a-comment>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { PostService } from 'src/app/controllers/postController/post.service';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-write-a-post',\r\n  templateUrl: './write-a-post.component.html',\r\n  styleUrls: ['./write-a-post.component.css']\r\n})\r\nexport class WriteAPostComponent implements OnInit {\r\n\r\n  image = \"assets/images/profilePicture.png\";\r\n  postForm = new FormGroup ({\r\n    content: new FormControl('')\r\n  })\r\n\r\n  constructor(private postService: PostService, private router: Router) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  writePost() {\r\n    let userString = sessionStorage.getItem('user');\r\n    if (userString) {\r\n      let user: User = JSON.parse(userString);\r\n      const content = this.postForm.value.content;\r\n      this.postService.writePost(content, user).subscribe();\r\n    }\r\n  }\r\n\r\n}","<div class=\"container-fluid well\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2\">\r\n            <img [src]=\"image\" class=\"img-responsive img-circle\" alt=\"Profile Picture\">\r\n        </div>\r\n        <div class=\"col-sm-10\">\r\n            <form>\r\n                <div [formGroup]=\"postForm\">\r\n                    <h3 style=\"margin-top: 0;\">Write a post</h3>\r\n                    <textarea class=\"form-control\" formControlName=\"content\"></textarea>\r\n                    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-top: 10px;\" (click)=\"writePost()\">Post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Comment } from 'src/app/models/comment';\r\n\r\n@Component({\r\n  selector: 'app-comment-feed',\r\n  templateUrl: './comment-feed.component.html',\r\n  styleUrls: ['./comment-feed.component.css']\r\n})\r\nexport class CommentFeedComponent implements OnInit {\r\n\r\n  @Input() comments: Comment[] | undefined;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid well\">\r\n    <div *ngIf=\"!comments || comments.length == 0\">\r\n        This post has no comments.\r\n    </div>\r\n    <div *ngIf=\"comments\">\r\n        <ul> \r\n            <li *ngFor='let comment of comments'>\r\n                <app-comment [comment]=\"comment\"></app-comment>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Post } from 'src/app/models/post';\r\nimport { Like } from 'src/app/models/like';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LikeService {\r\n\r\n  // Base URL\r\n  baseUrl = \"/api/like\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n  \r\n  // Like post (POST)\r\n  likePost(user: User, post: Post) {\r\n    let like: Like = {\r\n      user: user,\r\n      post: post\r\n    }\r\n\r\n    return this.http.post(this.baseUrl + '/create', like, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }\r\n\r\n  // Unlike post (DELETE)\r\n  unlikePost(user: User, post: Post) {\r\n    return this.http.delete(this.baseUrl + '/delete?postId=' + post.id + '&userId=' + user.id)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }\r\n\r\n\r\n\r\n  // Get likes (GET)\r\n  getLikes(post: Post): Observable<Like[]> {\r\n    return this.http.get<Like[]>(this.baseUrl + '/get?postId=' + post.id)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }\r\n\r\n\r\n    // Error handling\r\n  errorHandler(error: any) {\r\n    let errorMessage = '';\r\n    if(error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/controllers/userController/user.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  loggedIn: boolean | undefined;\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.loginStatus.subscribe(status => this.loggedIn = status);\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.clear();\r\n    this.userService.changeLoginStatus(false);\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" routerLink=\"/home\">Hello There</a>\r\n        </div>\r\n        <div *ngIf=\"loggedIn\">\r\n            <ul class=\"nav navbar-nav\">\r\n                <li><a routerLink=\"/home\">Home</a></li>\r\n                <li><a routerLink=\"/profile\">Profile</a></li>\r\n                <li><a routerLink=\"/friends\">Friends</a></li>\r\n            </ul>\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li (click)=\"logout()\"><a routerLink=\"/login\">Log Out</a></li>\r\n            </ul>\r\n        </div>\r\n        <div *ngIf=\"!loggedIn\">\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li><a routerLink=\"/login\">Log In</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/controllers/userController/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit{\r\n\r\n  signupForm = new FormGroup({\r\n    email: new FormControl(''),\r\n    username: new FormControl(''),\r\n    displayName: new FormControl(''),\r\n    password: new FormControl(''),\r\n    password2: new FormControl('')\r\n  })\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    if (sessionStorage.getItem('user')) {\r\n      this.router.navigate([\"/home\"]);\r\n    }\r\n  }\r\n\r\n  submitData() {\r\n    let email = this.signupForm.value.email;\r\n    let username = this.signupForm.value.username;\r\n    let displayName = this.signupForm.value.displayName;\r\n    let password = this.signupForm.value.password;\r\n    \r\n    this.userService.CreateUser(email, username, displayName, password).subscribe();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\"></div>\r\n        <div class=\"col-sm-6\">\r\n            <div class=\"container-fluid well\">\r\n                <form>\r\n                    <div [formGroup]=\"signupForm\">\r\n                        <h1>Sign Up</h1>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"email\">Email</label>\r\n                            <input id=\"email\" type=\"email\" class=\"form-control\" formControlName=\"email\" required>\r\n                            <div class=\"alert alert-danger\" *ngIf=\"signupForm.controls.email.touched && !signupForm.controls.email.valid\">\r\n                                <div>Email is invalid.</div>\r\n                            </div>\r\n    \r\n                            <label for=\"username\">Username</label>\r\n                            <input id=\"username\" type=\"text\" class=\"form-control\" minlength=\"3\" maxlength=\"12\" formControlName=\"username\" required>\r\n                            <div class=\"alert alert-danger\" *ngIf=\"signupForm.controls.username.touched && !signupForm.controls.username.valid\">\r\n                                <div>Username is invalid.</div>\r\n                            </div>\r\n    \r\n                            <label for=\"displayName\">Display Name</label>\r\n                            <input id=\"displayName\" type=\"text\" class=\"form-control\" minlength=\"1\" maxlength=\"30\" formControlName=\"displayName\" required>\r\n                            <div class=\"alert alert-danger\" *ngIf=\"signupForm.controls.displayName.touched && !signupForm.controls.displayName.valid\">\r\n                                <div>Display Name is invalid.</div>\r\n                            </div>\r\n    \r\n                            <label for=\"password\">Password</label>\r\n                            <input id=\"password\" type=\"password\" class=\"form-control\" minlength=\"8\" formControlName=\"password\" required>\r\n                            <div class=\"alert alert-danger\" *ngIf=\"signupForm.controls.password.touched && !signupForm.controls.password.valid\">\r\n                                <div>Password is invalid.</div>\r\n                            </div>\r\n    \r\n                            <label for=\"password2\">Re-enter Password</label>\r\n                            <input id=\"password2\" type=\"password\" class=\"form-control\" minlength=\"8\" formControlName=\"password2\" required>\r\n                            <div class=\"alert alert-danger\" *ngIf=\"signupForm.controls.password2.touched && (signupForm.controls.password.value != signupForm.controls.password2.value)\">\r\n                                <div>Passwords do not match.</div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div *ngIf=\"!signupForm.controls.password.valid || (signupForm.value.password != signupForm.value.password2)\">\r\n                            <button type=\"submit\" class=\"btn btn-primary btn-block\" (submit)=\"submitData()\" disabled>Sign Up</button>\r\n                        </div>\r\n                        <div *ngIf=\"signupForm.controls.password.valid && (signupForm.value.password === signupForm.value.password2)\">\r\n                            <button type=\"submit\" class=\"btn btn-primary btn-block\" (submit)=\"submitData()\">Sign Up</button>\r\n                        </div>\r\n                        <a routerLink=\"/login\"><button class=\"btn btn-default btn-block\">Log in</button></a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-3\"></div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { Friend } from 'src/app/models/friend';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FriendsService {\r\n\r\n  // Base URL\r\n  baseUrl = \"/api/friend\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n\r\n  // Add Friend (POST)\r\n  addFriend(user: User, friend: User) {\r\n    \r\n    const friendship = {\r\n      user: user,\r\n      friend: friend\r\n    }\r\n\r\n    return this.http.post(this.baseUrl + '/create', friendship, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n\r\n  }\r\n\r\n\r\n  // Get friends (GET)\r\n  getFriends(user: User): Observable<Friend[]> {\r\n\r\n    return this.http.get<Friend[]>(this.baseUrl + '/getall?userId=' + user.id)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }\r\n\r\n  \r\n  // Error handling\r\n  errorHandler(error: any) {\r\n    let errorMessage = '';\r\n    if(error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Comment } from 'src/app/models/comment';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.css']\r\n})\r\nexport class CommentComponent implements OnInit {\r\n\r\n  @Input() comment: Comment | undefined;\r\n  image = \"assets/images/profilePicture.png\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"comment\">\r\n    <div class=\"container-fluid well post\" style=\"margin-bottom: 0; margin-top: 10px;\">\r\n        <div class=\"media-left\">\r\n            <img [src]=\"image\" class=\"media-object\" style=\"width:70px\">\r\n        </div>\r\n        <div class=\"media-body\">\r\n            <h4><strong>{{ comment.author.displayName | uppercase }}</strong></h4>\r\n            <p class=\"well well-sm post-content\">{{ comment.content }}</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { CommentService } from 'src/app/controllers/commentController/comment.service';\r\nimport { Post } from 'src/app/models/post';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-write-a-comment',\r\n  templateUrl: './write-a-comment.component.html',\r\n  styleUrls: ['./write-a-comment.component.css']\r\n})\r\nexport class WriteACommentComponent implements OnInit {\r\n\r\n  @Input() post: Post | undefined;\r\n  image = \"assets/images/profilePicture.png\";\r\n  commentForm = new FormGroup ({\r\n    content: new FormControl('')\r\n  })\r\n\r\n\r\n  constructor(private commentService: CommentService) { }\r\n\r\n  ngOnInit(): void {  }\r\n\r\n  writeComment() {\r\n    let userString = sessionStorage.getItem('user');\r\n    if (userString && this.post) {\r\n      let user: User = JSON.parse(userString);\r\n      const content = this.commentForm.value.content;\r\n      this.commentService.writeComment(content, user, this.post).subscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\" style=\"margin-top: 0;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-1\">\r\n        </div>\r\n        <div class=\"col-sm-11 well well-sm\">\r\n            <form>\r\n                <div [formGroup]=\"commentForm\">\r\n                    <h5 style=\"margin-top: 0;\">Write a Comment</h5>\r\n                    <textarea class=\"form-control\" formControlName=\"content\"></textarea>\r\n                    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-top: 10px;\" (click)=\"writeComment()\">Add comment</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/controllers/userController/user.service';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  users: User[] | undefined;\r\n  currentUser: User | undefined;\r\n  error: boolean = false;\r\n\r\n  loginForm = new FormGroup ({\r\n    username: new FormControl(''),\r\n    password: new FormControl('')\r\n  })\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (sessionStorage.getItem('user')) {\r\n      this.router.navigate([\"/home\"]);\r\n    }\r\n  }\r\n\r\n  login() {\r\n    const username = this.loginForm.value.username;\r\n    const password = this.loginForm.value.password;\r\n\r\n    this.userService.LogIn(username, password).subscribe(data => { \r\n      this.users = data;\r\n\r\n      if(!this.users[0]) {\r\n        this.error = true;\r\n      }\r\n      else {\r\n        console.log(this.users);\r\n        sessionStorage.setItem('user', JSON.stringify(this.users[0]));\r\n        this.userService.changeLoginStatus(true);\r\n        this.router.navigate(['/home']);\r\n      }\r\n    });    \r\n  }\r\n}","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\"></div>\r\n        <div class=\"col-sm-6\">\r\n            <div class=\"container-fluid well\">\r\n                <form>\r\n                    <div [formGroup]=\"loginForm\">\r\n                        <h1>Log In</h1>\r\n                        <div class=\"form-group\" id=\"username-div\">\r\n                            <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n                                Invalid username/password.\r\n                            </div>\r\n                            <label for=\"username\" id=\"username-label\">Username:</label>\r\n                            <input id=\"username\" type=\"text\" class=\"form-control\" minlength=\"3\" maxlength=\"12\" formControlName=\"username\" required>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"password\">Password:</label>\r\n                            <input id=\"password\" type=\"password\" class=\"form-control\" minlength=\"8\" formControlName=\"password\" required>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"login()\">Log in</button>\r\n                    <a routerLink=\"/signup\"><button type=\"button\" class=\"btn btn-default btn-block\">Sign Up</button></a>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-3\"></div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/controllers/userController/user.service';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-profile-information',\r\n  templateUrl: './profile-information.component.html',\r\n  styleUrls: ['./profile-information.component.css']\r\n})\r\nexport class ProfileInformationComponent implements OnInit {\r\n\r\n  image: string = \"/assets/images/profilePicture.png\";\r\n  user: User | undefined;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    let userString = sessionStorage.getItem('user');\r\n    console.log(userString);\r\n    if (userString) {\r\n      this.user = JSON.parse(userString);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid well\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-4\">\r\n            <img [src]=\"image\" class=\"img-responsive img-circle\" alt=\"Profile Picture\">\r\n        </div>\r\n        <div class=\"col-sm-8\" *ngIf=\"user\">\r\n            <h4 class=\"text-uppercase\" id=\"display-name\">{{ user.displayName }}</h4>\r\n            <p class=\"text-lowercase\" id=\"username\">{{ user.username }}</p>\r\n            <p class=\"text-lowercase text-muted\" id=\"email\">{{ user.email }}</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (!sessionStorage.getItem('user')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\"></div>\r\n        <div class=\"col-sm-6\">\r\n            <app-write-a-post></app-write-a-post>\r\n            <app-home-feed></app-home-feed>\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n            <app-friends-sidebar></app-friends-sidebar>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from 'src/app/controllers/postController/post.service';\r\nimport { Post } from '../../models/post';\r\n\r\n@Component({\r\n  selector: 'app-home-feed',\r\n  templateUrl: './home-feed.component.html',\r\n  styleUrls: ['./home-feed.component.css']\r\n})\r\nexport class HomeFeedComponent implements OnInit {\r\n\r\n  posts: Post[] | undefined; \r\n  \r\n\r\n  constructor(private postService: PostService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.postService.getPosts().subscribe(data => {\r\n      this.posts = data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid well\">\r\n    <h3>Home Feed</h3>\r\n    <div *ngIf=\"!posts\">\r\n        There are no posts to show.\r\n    </div>\r\n    <div *ngIf=\"posts\">\r\n        <ul> \r\n            <li *ngFor='let post of posts'>\r\n                <app-post [post]=\"post\" ></app-post>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'project2';\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\nimport { FriendsService } from '../../controllers/friendController/friend.service';\r\nimport { Friend } from '../../models/friend';\r\n\r\n@Component({\r\n  selector: 'app-friends-sidebar',\r\n  templateUrl: './friends-sidebar.component.html',\r\n  styleUrls: ['./friends-sidebar.component.css']\r\n})\r\nexport class FriendsSidebarComponent implements OnInit {\r\n\r\n  user: User | undefined;\r\n  friends : Friend[] | undefined;\r\n\r\n  constructor(private friendsService : FriendsService) { }\r\n\r\n  ngOnInit(): void {\r\n    let userString = sessionStorage.getItem('user');\r\n    if (userString) {\r\n      this.user = JSON.parse(userString);\r\n    }\r\n\r\n    if (this.user) {\r\n      this.friendsService.getFriends(this.user).subscribe(data => {\r\n        this.friends = data;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid well\">\r\n    <h3 style=\"margin-top: 0;\">Friends</h3>\r\n\r\n    <div *ngIf=\"!friends\">\r\n        <p>You have no friends.</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"friends\">\r\n        <ul *ngFor = \"let friend of friends;\">\r\n            <li>\r\n                <app-friend [friendship]=\"friend\"></app-friend>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { User } from '../../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  private loggedInSource = new BehaviorSubject<boolean>(false);\r\n  loginStatus = this.loggedInSource.asObservable();\r\n  \r\n  // change login status\r\n  changeLoginStatus(status: boolean) {\r\n    this.loggedInSource.next(status);\r\n  }\r\n\r\n  // Base URL\r\n  baseUrl = \"/api/user\";\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n\r\n  // Create User (POST)\r\n  CreateUser(email: string, username: string, displayName: string, password: string): Observable<User> {\r\n\r\n    const userData = {\r\n      email: email,\r\n      username: username,\r\n      displayName: displayName,\r\n      password: password\r\n    }\r\n\r\n    return this.http.post<User>(this.baseUrl + '/create', userData, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n\r\n  }\r\n\r\n\r\n  // Log In (POST)\r\n  LogIn(username: string, password: string): Observable<User[]> {\r\n\r\n    const userData = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    return this.http.post<User[]>(this.baseUrl + '/login', userData, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }  \r\n\r\n\r\n  // Error handling\r\n  errorHandler(error: any) {\r\n    let errorMessage = '';\r\n    if(error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ProfileInformationComponent } from './views/profile-information/profile-information.component';\r\nimport { NavbarComponent } from './views/navbar/navbar.component';\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\nimport { FriendsListComponent } from './views/friends-list/friends-list.component';\r\nimport { PostSignatureComponent } from './views/post-signature/post-signature.component';\r\nimport { CommentComponent } from './views/comment/comment.component';\r\nimport { WriteACommentComponent } from './views/write-a-comment/write-a-comment.component';\r\nimport { HomeFeedComponent } from './views/home-feed/home-feed.component';\r\nimport { ProfileFeedComponent } from './views/profile-feed/profile-feed.component';\r\nimport { WriteAPostComponent } from './views/write-a-post/write-a-post.component';\r\nimport { FriendsSidebarComponent } from './views/friends-sidebar/friends-sidebar.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { SignupComponent } from './views/signup/signup.component';\r\nimport { UserService } from './controllers/userController/user.service';\r\nimport { PostService } from './controllers/postController/post.service';\r\nimport { ViewPostComponent } from './views/view-post/view-post.component';\r\nimport { PostComponent } from './views/post/post.component';\r\nimport { FriendComponent } from './views/friend/friend.component';\r\nimport { FriendsService } from './controllers/friendController/friend.service';\r\nimport { CommentService } from './controllers/commentController/comment.service';\r\nimport { LikeService } from './controllers/likeController/like.service';\r\nimport { CommentFeedComponent } from './views/comment-feed/comment-feed.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProfileInformationComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    FriendsListComponent,\r\n    PostSignatureComponent,\r\n    CommentComponent,\r\n    WriteACommentComponent,\r\n    HomeFeedComponent,\r\n    ProfileFeedComponent,\r\n    WriteAPostComponent,\r\n    FriendsSidebarComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ViewPostComponent,\r\n    PostComponent,\r\n    FriendComponent,\r\n    CommentFeedComponent    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],  \r\n  providers: [\r\n    UserService,\r\n    PostService,\r\n    FriendsService,\r\n    CommentService,\r\n    LikeService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-post',\r\n  templateUrl: './view-post.component.html',\r\n  styleUrls: ['./view-post.component.css']\r\n})\r\nexport class ViewPostComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\"></div>\r\n        <div class=\"col-sm-6\">\r\n            <app-write-a-comment></app-write-a-comment>\r\n            <app-home-feed></app-home-feed>\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n            <app-friends-sidebar></app-friends-sidebar>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Post } from 'src/app/models/post';\r\nimport { Comment } from 'src/app/models/comment';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  // Base URL\r\n  baseUrl = \"/api/comment\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // Write comment (POST)\r\n  writeComment(content: string, author: User, associatedPost: Post) {\r\n\r\n    const comment = {\r\n      content: content,\r\n      author: author,\r\n      associatedPost: associatedPost\r\n    }\r\n\r\n    return this.http.post<Post>(this.baseUrl + '/create', comment, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandler)\r\n    );\r\n  }\r\n\r\n    // Get comments (GET)\r\n    getComments(post: Post): Observable<Comment[]> {\r\n      return this.http.get<Comment[]>(this.baseUrl + '/get?postId=' + post.id)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandler)\r\n      );\r\n    }\r\n\r\n\r\n    // Error handling\r\n  errorHandler(error: any) {\r\n    let errorMessage = '';\r\n    if(error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from 'src/app/controllers/postController/post.service';\r\nimport { Post } from 'src/app/models/post';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-profile-feed',\r\n  templateUrl: './profile-feed.component.html',\r\n  styleUrls: ['./profile-feed.component.css']\r\n})\r\nexport class ProfileFeedComponent implements OnInit {\r\n\r\n  user: User | undefined;\r\n  posts: Post[] | undefined;\r\n  image = \"assets/images/profilePicture.png\";\r\n\r\n  constructor(private postService: PostService) { }\r\n\r\n  ngOnInit(): void {\r\n    let userString = sessionStorage.getItem('user');\r\n    if (userString) {\r\n      this.user = JSON.parse(userString);\r\n\r\n      console.log(this.user);\r\n      if (this.user) {\r\n        this.postService.getUserPosts(this.user).subscribe(data => {\r\n          this.posts = data;\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid well\">\r\n    <h3>Profile Feed</h3>\r\n    <div *ngIf=\"!posts\">\r\n        There are no posts to show.\r\n    </div>\r\n    <div *ngIf=\"posts\">\r\n        <ul> \r\n            <li *ngFor='let post of posts'>\r\n                <app-post [post]=\"post\" ></app-post>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-post-signature',\r\n  templateUrl: './post-signature.component.html',\r\n  styleUrls: ['./post-signature.component.css']\r\n})\r\nexport class PostSignatureComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>post-signature works!</p>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Friend } from 'src/app/models/friend';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-friend',\r\n  templateUrl: './friend.component.html',\r\n  styleUrls: ['./friend.component.css']\r\n})\r\nexport class FriendComponent implements OnInit {\r\n\r\n  @Input() friendship: Friend | undefined;\r\n  friend: User | undefined;\r\n  image = \"assets/images/profilePicture.png\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    let userString = sessionStorage.getItem('user');\r\n    if (userString && this.friendship) {\r\n      let user = JSON.parse(userString);\r\n      if (user == this.friendship.user) {\r\n        this.friend = this.friendship.friend;\r\n      }\r\n      else {\r\n        this.friend = this.friendship.user;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"friend\">\r\n    <div class=\"container-fluid well post\">\r\n        <div class=\"media-left\">\r\n            <img [src]=\"image\" class=\"media-object\" style=\"width:70px\">\r\n        </div>\r\n        <div class=\"media-body\">\r\n            <h4><strong>{{ friend.displayName | uppercase }}</strong></h4>\r\n            <p>{{ friend.username }}</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user';\r\nimport { FriendsService } from '../../controllers/friendController/friend.service';\r\nimport { Friend } from '../../models/friend';\r\n\r\n@Component({\r\n  selector: 'app-friends-list',\r\n  templateUrl: './friends-list.component.html',\r\n  styleUrls: ['./friends-list.component.css']\r\n})\r\nexport class FriendsListComponent implements OnInit {\r\n\r\n  user: User | undefined;\r\n  friends : Friend[] | undefined;\r\n\r\n  constructor(private friendsService : FriendsService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    let userString = sessionStorage.getItem('user');\r\n    if (userString) {\r\n      this.user = JSON.parse(userString);\r\n\r\n      if (this.user) {\r\n        this.friendsService.getFriends(this.user).subscribe(data => {\r\n          this.friends = data;\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  }\r\n\r\n}","<div class=\"container-fluid well\">\r\n    <h3 style=\"margin-top: 0;\">Friends</h3>\r\n\r\n    <div *ngIf=\"!friends\">\r\n        <p>You have no friends.</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"friends\">\r\n        <ul *ngFor = \"let friend of friends;\">\r\n            <li>\r\n                <app-friend [friendship]=\"friend\"></app-friend>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FriendsListComponent } from './views/friends-list/friends-list.component';\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\nimport { SignupComponent } from './views/signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'profile', component: ProfileComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'friends', component: FriendsListComponent },\r\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (!sessionStorage.getItem('user')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\"></div>\r\n        <div class=\"col-sm-6\">\r\n            <app-profile-information></app-profile-information>\r\n            <app-write-a-post></app-write-a-post>\r\n            <app-profile-feed></app-profile-feed>\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n            <app-friends-sidebar></app-friends-sidebar>\r\n        </div>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}